events {}

http {
    server {
        listen 80; #escucha en el puerto 80
        server_name botipeluquerias.work.gd; # Nombre del servidor

        # Redirige todo el tráfico HTTP a HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl; # Escucha en el puerto 443 para HTTPS
        server_name botipeluquerias.work.gd; # Nombre del servidor

        ssl_certificate /etc/nginx/certs/certificate.crt; # Certificado SSL
        ssl_certificate_key /etc/nginx/certs/private.key; # Clave privada del certificado
        ssl_trusted_certificate /etc/nginx/certs/ca_bundle.crt; # Certificado CA

        # Proxy para la API
        location /api/ {
            proxy_pass http://backend:8000/api/; # Cambia 'backend' por el nombre de tu servicio de backend
            proxy_set_header Host $host; # Mantiene el nombre del host original
            proxy_set_header X-Real-IP $remote_addr; # IP real del cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # IPs de los clientes en la cadena de proxies
            proxy_set_header X-Forwarded-Proto $scheme; # Protocolo original (http o https)
        }

        # Proxy para la subida de archivos
        location /upload {
            proxy_pass http://backend:8000/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Archivos estáticos subidos (imágenes, etc)
        location /uploads/ {
            alias /var/www/public/uploads/;
            # Configuración de caché para archivos estáticos
            access_log off;
            # cachear archivos estáticos por 30 días
            expires 30d;
        }

        # Todo lo demás va al frontend (Vite o build)
        location / {
            proxy_pass http://frontend:5173/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1; #usa HTTP/1.1 para mantener la conexión abierta
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}